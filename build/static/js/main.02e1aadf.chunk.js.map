{"version":3,"sources":["components/Analise/Analise.module.css","components/RightPanel/RightPanel.js","components/AppHeader/AppHeader.js","constants/cartas.js","components/Carta/Carta.js","components/Analise/Analise.js","App.js","serviceWorker.js","index.js","components/RightPanel/RightPanel.module.css"],"names":["module","exports","RightPanel","props","modal","notification","useState","showModal","pass","msg","state","setState","className","Modal","open","aria-label","iconDescription","primaryButtonText","secondaryButtonText","modalHeading","style","textAlign","onRequestClose","onRequestSubmit","a","async","setLoading","fetch","method","headers","body","JSON","stringify","json","then","content","cancel","err","catch","TextInput","id","type","labelText","placeholder","onChange","e","target","value","kind","title","subtitle","onCloseButtonClick","caption","Date","classes","container","role","Button","onClick","AppHeader","errMsg","credentials","apikey","url","model_id","rawResponse","marginBottom","href","prefix","window","expanded","cartas","Carta","error","letterText","split","map","line","justifyContent","marginRight","carta","Math","floor","random","length","console","setData","result","TextArea","cols","rows","textChangeHandler","Analise","data","entities","entity","index","text","confidence","margin","marginTop","relations","relation","arguments","argument","score","App","loading","points","io","on","obj","setLoadingHandler","cancelLoadingHandler","loadingComponent","data-loading","viewBox","cx","cy","r","d","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02e1aadf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"placeholder\":\"Analise_placeholder__n8lhc\",\"data\":\"Analise_data__3ue7t\",\"subtitle\":\"Analise_subtitle__2IAHV\"};","import React, { useState } from 'react';\nimport classes from './RightPanel.module.css';\nimport { Button, Modal, TextInput, ToastNotification } from 'carbon-components-react';\n\nconst RightPanel = (props) => {\n\n    const initialState = {\n        showModal: false,\n        pass: \"\",\n        notification: false,\n        msg: \"\"\n    }\n\n    const [state, setState] = useState(initialState);\n\n    const onModalOpenHandler = () => {\n        setState({ ...state, showModal: true });\n    };\n\n    const onSubmitHandler = async () => {\n        setState({ ...state, showModal: false });\n        props.setLoading();\n        const rawResponse = await fetch('/enviar', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n            body: JSON.stringify({\n                pass: state.pass\n            })\n        });\n        // console.log(rawResponse);\n        rawResponse.json()\n            .then(content => {\n                props.cancel();\n                if (content.err === false) {\n                    setState({ ...state, showModal: false, notification: \"success\", msg: content.msg, pass: \"\" });\n                } else {\n                    setState({ ...state, showModal: false, notification: \"error\", msg: content.msg, pass: \"\" });\n                };\n            })\n            .catch(() => {\n                props.cancel();\n                setState({ ...state, showModal: false, notification: \"error\", msg: \"Houve um erro interno no servidor. Aguarde um momento ou contate um supervisor.\", pass: \"\" });\n            });\n    };\n\n    let modal;\n    if (state.showModal === true) {\n        modal = (\n            <div className=\"modal-settings\">\n                <Modal\n                    open\n                    aria-label=\"Enviar desafio para análise\"\n                    iconDescription=\"Fechar\"\n                    primaryButtonText=\"Enviar\"\n                    secondaryButtonText=\"Cancelar\"\n                    modalHeading=\"Enviar desafio para análise\"\n                    style={{ textAlign: \"left\" }}\n                    onRequestClose={() => setState({ ...state, showModal: false })}\n                    onRequestSubmit={onSubmitHandler}\n                >\n                    <TextInput\n                        // style={{ marginBottom: \"16px\" }}\n                        id=\"senha\"\n                        type=\"password\"\n                        labelText=\"Senha para o desafio recebida por email\"\n                        placeholder=\"Digite sua senha...\"\n                        onChange={(e) => setState({ ...state, pass: e.target.value })}\n                        value={state.pass}\n                    />\n                </Modal>\n            </div>\n        );\n    } else {\n        modal = null;\n    };\n\n    let notification;\n    if (notification !== false) {\n        switch (state.notification) {\n            case \"error\":\n                notification = (\n                    <div className=\"modal-settings\">\n                        <ToastNotification\n                            kind=\"error\"\n                            title=\"Erro\"\n                            subtitle={state.msg}\n                            iconDescription=\"Fechar\"\n                            onCloseButtonClick={() => setState({ ...state, notification: false, msg: \"\" })}\n                            caption={Date()}\n                        />\n                    </div>\n                );\n                break;\n            case \"success\":\n                notification = (\n                    <div className=\"modal-settings\">\n                        <ToastNotification\n                            kind=\"success\"\n                            title=\"Sucesso\"\n                            subtitle={state.msg}\n                            iconDescription=\"Fechar\"\n                            onCloseButtonClick={() => setState({ ...state, notification: false, msg: \"\" })}\n                            caption={Date()}\n                        />\n                    </div>\n                );\n                break;\n            default:\n                notification = null;\n                break;\n        }\n    } else {\n        notification = null;\n    }\n\n    return (\n        <div className={classes.container}>\n            {modal}\n            {notification}\n            <h3>Desafio Natalino <span role=\"img\" aria-label=\"natal\">🎄</span></h3>\n            <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;O Papai Noel está recebendo muitas cartas esse ano. Facilite o trabalho do Papai Noel criando um anotador de cartas de natal, para ele saber rapidamente qual presente entregar, para quem e onde!</p>\n            <Button\n                onClick={onModalOpenHandler}\n            >Enviar</Button>\n        </div>\n    );\n};\n\nexport default RightPanel;","import React, { useState } from 'react';\nimport {\n    Header,\n    HeaderName,\n    HeaderGlobalBar,\n    HeaderGlobalAction,\n    HeaderPanel\n} from 'carbon-components-react/lib/components/UIShell';\nimport { Modal, TextInput, ToastNotification } from 'carbon-components-react';\nimport GithubIcon32 from '@carbon/icons-react/lib/logo--github/32';\nimport SettingsIcon32 from '@carbon/icons-react/lib/settings/32';\nimport RightPanel from '../RightPanel/RightPanel';\n\nconst AppHeader = (props) => {\n\n    const initialState = {\n        showModal: false,\n        notification: false,\n        errMsg: \"\",\n        credentials: {\n            apikey: \"\",\n            url: \"\",\n            model_id: \"\"\n        }\n    };\n\n    const [state, setState] = useState(initialState);\n\n    const onChangeCredentialsHandler = async () => {\n        props.setLoading();\n        setState({ ...state, credentials: { ...state.credentials }, showModal: false });\n        const rawResponse = await fetch('/credenciais', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n            body: JSON.stringify({\n                ...state.credentials\n            })\n        });\n        const content = await rawResponse.json();\n        props.cancel();\n        if (content.err === true) {\n            setState({ showModal: false, notification: \"error\", errMsg: content.msg });\n        } else {\n            setState({ showModal: false, notification: \"success\" });\n        };\n    };\n\n    let modal;\n    if (state.showModal === true) {\n        modal = (\n            <div className=\"modal-settings\">\n                <Modal\n                    open\n                    aria-label=\"Trocar modelo de anotação\"\n                    iconDescription=\"Fechar\"\n                    primaryButtonText=\"Trocar modelo\"\n                    secondaryButtonText=\"Cancelar\"\n                    modalHeading=\"Troque o seu modelo de anotação\"\n                    style={{ textAlign: \"left\" }}\n                    onRequestClose={() => setState({ showModal: false })}\n                    onRequestSubmit={onChangeCredentialsHandler}\n                >\n                    <TextInput\n                        style={{ marginBottom: \"16px\" }}\n                        id=\"apikey-nlu\"\n                        labelText=\"Apikey do serviço de Natural Language Understanding\"\n                        placeholder=\"Digite a apikey...\"\n                        onChange={(e) => setState({ ...state, credentials: { ...state.credentials, apikey: e.target.value } })}\n                        value={state.credentials.apikey}\n                    />\n                    <TextInput\n                        style={{ marginBottom: \"16px\" }}\n                        id=\"url-nlu\"\n                        labelText=\"URL do serviço de Natural Language Understanding\"\n                        placeholder=\"Digite a url...\"\n                        onChange={(e) => setState({ ...state, credentials: { ...state.credentials, url: e.target.value } })}\n                        value={state.credentials.url}\n                    />\n                    <TextInput\n                        id=\"model-wks\"\n                        labelText=\"Model ID do serviço de Watson Knowledge Studio\"\n                        placeholder=\"Digite o model ID...\"\n                        onChange={(e) => setState({ ...state, credentials: { ...state.credentials, model_id: e.target.value } })}\n                        value={state.credentials.model_id}\n                    />\n                </Modal>\n            </div>\n        );\n    } else {\n        modal = null;\n    };\n\n    let notification;\n    if (notification !== false) {\n        switch (state.notification) {\n            case \"error\":\n                notification = (\n                    <div className=\"modal-settings\">\n                        <ToastNotification\n                            kind=\"error\"\n                            title=\"Erro\"\n                            subtitle={state.errMsg}\n                            iconDescription=\"Fechar\"\n                            onCloseButtonClick={() => setState({ ...state, notification: false, errMsg: \"\" })}\n                            caption={Date()}\n                        />\n                    </div>\n                );\n                break;\n            case \"success\":\n                notification = (\n                    <div className=\"modal-settings\">\n                        <ToastNotification\n                            kind=\"success\"\n                            title=\"Sucesso\"\n                            subtitle=\"Modelo alterado com sucesso.\"\n                            iconDescription=\"Fechar\"\n                            onCloseButtonClick={() => setState({ ...state, notification: false })}\n                            caption={Date()}\n                        />\n                    </div>\n                );\n                break;\n            default:\n                notification = null;\n                break;\n        }\n    } else {\n        notification = null;\n    }\n\n    return (\n        <Header aria-label=\"IBM Digital Chistmas Challenge\">\n            {modal}\n            {notification}\n            <HeaderName href=\"/\" prefix=\"IBM\">\n                Digital Christmas Challenge\n            </HeaderName>\n            <HeaderGlobalBar>\n                <HeaderGlobalAction aria-label=\"Github\" onClick={() => window.open(\"https://github.com/ibmdeveloperbr/christmas-challenge\")}>\n                    <GithubIcon32 />\n                </HeaderGlobalAction>\n                <HeaderGlobalAction aria-label=\"Settings\" onClick={() => setState({ ...state, showModal: true, credentials: { ...state.credentials } })}>\n                    <SettingsIcon32 />\n                </HeaderGlobalAction>\n            </HeaderGlobalBar>\n            <HeaderPanel aria-label=\"description\" expanded>\n                <RightPanel setLoading={props.setLoading} cancel={props.cancel} />\n            </HeaderPanel>\n        </Header>\n    );\n};\n\nexport default AppHeader;","const cartas = ['Oi Papai Noel, eu sou o Carlos, moro na Rua Jose Dias, 3064 eu iria ficar muito feliz se ganhasse um hotwheels',\n    'Papai noel eu sou o Pedro eu moro na estrada da felicidade, número 183 gostaria de pedir para o senhor uma boneca polly',\n    'Papai noel eu sou o Sergio eu moro na rua da alvorada, número 2490 gostaria de pedir para o senhor um carrinho',\n    'meu endereço é Rua Lopes Machado, n3960 esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar um ponei',\n    'Oi papai noel moro na Rua Branco Matos, 300 esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar uma bicicleta',\n    'Querido papai noel, eu gostaria de ganhar uma Ferrari eu moro na Avenida Vinte e Nove de Setembro, número 1395',\n    'Papai noel eu sou o Eduardo moro na Rua Ipiranga, 2697 esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar um hotwheels',\n    'Papai noel, eu moro na Rua Jose Dias, número 576 eu gostaria de ganhar uma Ferrari',\n    'Oi papai noel moro na rua lopes machado, 2634 esse natal eu gostaria de ganhar um hotwheels se eu ganhar vou ficar muito muito feliz',\n    'Papai noel, eu moro na Rua Jose Dias, número 1495 gostaria de pedir para o senhor uma bicicleta',\n    'Querido Papai Noel, meu endereço é Avenida Vinte e Nove de Setembro, n2119 esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar uma bicicleta ou bola',\n    'Oi papai noel eu iria ficar muito feliz se ganhasse um tenis moro na avenida brasil, 598',\n    'Querido papai noel, como me comportei muito bem esse ano queria ganhar um carrinho moro na Rua Lopes Machado, 3025',\n    'Querido papai noel eu quero te pedir por favor um celular eu moro na Rua Diogenes Lima, número 3860',\n    'moro na Rua Lopes Machado, 2168 gostaria de pedir para o senhor uma bicicleta',\n    'Oi Papai Noel, eu sou a Thais, eu gostaria de ganhar um boneco max steel meu endereço é Estrada da Felicidade, n3258',\n    'Papai noel, esse natal eu gostaria de ganhar um boneco max steel se eu ganhar vou ficar muito muito feliz eu moro na Avenida Brasil, número 3896',\n    'Oi papai noel moro na Avenida Brasil, 2584 eu iria ficar muito feliz se ganhasse um carrinho',\n    'Papai noel eu sou o Samuel meu endereço é Rua da Alvorada, n895 eu quero te pedir por favor um patinete',\n    'Oi papai noel como me comportei muito bem esse ano queria ganhar uma Ferrari moro na Avenida Brasil, 1682',\n    'Oi Papai Noel, eu sou o Victor, eu moro na Rua Jose Dias, número 912 como me comportei muito bem esse ano queria ganhar um carrinho',\n    'Querido papai noel, moro na Rua Diogenes Lima, 3983 eu quero te pedir por favor um ponei',\n    'Oi Papai Noel, eu sou o Carlos, eu quero te pedir por favor uma boneca polly moro na Rua Lopes Machado, 46',\n    'Papai noel eu sou a Renata como me comportei muito bem esse ano queria ganhar uma bola moro na Rua Jose Dias, 2653',\n    'Querido Papai Noel, meu endereço é Rua Jose Dias, n2642 eu quero te pedir por favor uma bicicleta',\n    'ola papai noel eu moro na Rua Branco Matos, número 745 esse natal eu gostaria de ganhar uma bicicleta se eu ganhar vou ficar muito muito feliz',\n    'Querido papai noel, eu moro na Rua Ipiranga, número 882 gostaria de pedir para o senhor um tenis',\n    'Oi Papai Noel, eu sou a Rebeca, meu endereço é rua ipiranga, n3418 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma bola no natal seria muito legal',\n    'Querido Papai Noel eu iria ficar muito feliz se ganhasse uma Ferrari eu moro na Estrada da Felicidade, número 1152',\n    'Querido papai noel, meu endereço é Avenida Vinte e Nove de Setembro, n3477 gostaria de pedir para o senhor uma Ferrari',\n    'Querido Papai Noel meu endereço é Rua Jose Dias, n937 gostaria de pedir para o senhor uma boneca barbie',\n    'Oi Papai Noel, eu sou a Gabriela, moro na Rua Lopes Machado, 334 eu gostaria de ganhar um tenis',\n    'Papai noel, meu endereço é Avenida Vinte e Nove de Setembro, n3103 eu iria ficar muito feliz se ganhasse uma bola',\n    'Querido Papai Noel, eu moro na Rua Ipiranga, número 1548 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um carrinho no natal seria muito legal',\n    'Papai noel eu sou o Samuel eu moro na Rua Ipiranga, número 133 eu quero te pedir por favor um computador',\n    'Oi Papai Noel, eu sou o Eric, meu endereço é Rua Lopes Machado, n3045 esse natal eu gostaria de ganhar um patinete se eu ganhar vou ficar muito muito feliz',\n    'moro na Avenida Brasil, 1507 eu iria ficar muito feliz se ganhasse uma boneca barbie',\n    'Querido papai noel, moro na rua branco matos, 3387 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma Ferrari no natal seria muito legal',\n    'Papai noel, ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer uma bola no natal seria muito legal meu endereço é Avenida Brasil, n3079',\n    'Papai noel eu sou a Roberta meu endereço é Rua Lopes Machado, n270 eu iria ficar muito feliz se ganhasse um carrinho',\n    'Oi Papai Noel, eu sou o Vanderlei, esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar um celular meu endereço é rua diogenes lima, n208',\n    'Oi Papai Noel, eu sou Sam, eu moro na Rua da Alvorada, número 1065 eu quero te pedir por favor um boneco max steel',\n    'Papai noel, esse natal eu gostaria de ganhar uma bicicleta ou bola se eu ganhar vou ficar muito muito feliz moro na Rua Jose Dias, 2621',\n    'Querido papai noel, eu iria ficar muito feliz se ganhasse uma Ferrari eu moro na rua lopes machado, número 603',\n    'Querido Papai Noel, moro na rua lopes machado, 1720 eu gostaria de ganhar um computador',\n    'Oi papai noel moro na Rua Jose Dias, 2200 esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar um patinete',\n    'Querido Papai Noel moro na Estrada da Felicidade, 2427 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um boneco max steel no natal seria muito legal',\n    'Papai noel, moro na Avenida Vinte e Nove de Setembro, 2020 eu gostaria de ganhar um tenis',\n    'Oi papai noel moro na Avenida Vinte e Nove de Setembro, 3896 gostaria de pedir para o senhor uma Ferrari',\n    'Oi papai noel como me comportei muito bem esse ano queria ganhar um boneco max steel meu endereço é Avenida Vinte e Nove de Setembro, n3544',\n    'Querido papai noel, eu moro na Rua Ipiranga, número 154 eu gostaria de ganhar um carrinho',\n    'Papai noel eu sou a Erica eu moro na Rua Lopes Machado, número 1075 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um ponei no natal seria muito legal',\n    'Papai noel, eu quero te pedir por favor um celular meu endereço é Rua Ipiranga, n2031',\n    'Papai noel eu sou a juju eu moro na Rua Lopes Machado, número 3448 eu iria ficar muito feliz se ganhasse um patinete',\n    'Querido papai noel gostaria de pedir para o senhor um tenis moro na Avenida Vinte e Nove de Setembro, 1905',\n    'Oi Papai Noel, eu sou o Juan, moro na Estrada da Felicidade, 533 ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um boneco max steel no natal seria muito legal',\n    'Querido papai noel, esse natal eu gostaria de ganhar um tenis se eu ganhar vou ficar muito muito feliz moro na Rua Ipiranga, 3018',\n    'Papai noel, eu quero te pedir por favor um carrinho moro na Rua Branco Matos, 3263',\n    'Oi Papai Noel, eu sou o Eric, eu moro na Avenida Brasil, número 3622 eu quero te pedir por favor um hotwheels',\n    'Oi papai noel esse natal eu gostaria de ganhar um celular se eu ganhar vou ficar muito muito feliz eu moro na Rua Ipiranga, número 2533',\n    'Oi papai noel gostaria de pedir para o senhor um tenis meu endereço é Rua Diogenes Lima, n1153',\n    'Papai noel eu sou o Sergio fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar um celular eu moro na Avenida Brasil, número 2326',\n    'ola papai noel ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um boneco max steel no natal seria muito legal moro na Rua Diogenes Lima, 3691',\n    'Oi papai noel meu endereço é Avenida Vinte e Nove de Setembro, n379 como me comportei muito bem esse ano queria ganhar uma bola',\n    'Oi papai noel esse natal eu gostaria de ganhar uma bicicleta se eu ganhar vou ficar muito muito feliz eu moro na Avenida Vinte e Nove de Setembro, número 2630',\n    'Querido papai noel moro na Rua Ipiranga, 607 eu gostaria de ganhar uma bicicleta ou bola',\n    'Querido Papai Noel, moro na Rua Ipiranga, 926 como me comportei muito bem esse ano queria ganhar um celular',\n    'Querido Papai Noel moro na estrada da felicidade, 2607 como me comportei muito bem esse ano queria ganhar uma boneca barbie',\n    'Oi Papai Noel, eu sou o Julio, eu quero te pedir por favor um celular eu moro na Rua Ipiranga, número 2515',\n    'Papai noel eu sou o Claudio eu moro na Rua Jose Dias, número 2930 esse natal eu gostaria de ganhar uma bicicleta ou bola se eu ganhar vou ficar muito muito feliz',\n    'Oi papai noel eu moro na Rua Ipiranga, número 1842 eu iria ficar muito feliz se ganhasse um patinete',\n    'ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um computador no natal seria muito legal meu endereço é Rua Diogenes Lima, n3387',\n    'Oi papai noel como me comportei muito bem esse ano queria ganhar um celular moro na Rua Branco Matos, 3445',\n    'Oi Papai Noel, eu sou o Fransisco, moro na Rua Ipiranga, 684 fui muito legal com meus amiguinhos esse ano, sera que vc poderia me dar um celular',\n    'Querido papai noel, gostaria de pedir para o senhor uma boneca barbie meu endereço é Rua Diogenes Lima, n3641',\n    'Papai noel eu sou a Roberta ajudei muito papai e mamãe sempre que eles pediram esse ano, queria pedir para o senhor me trazer um patinete no natal seria muito legal meu endereço é Avenida Vinte e Nove de Setembro, n458',\n    'Papai noel eu sou a Cassia meu endereço é Rua Lopes Machado, n2751 gostaria de pedir para o senhor uma boneca polly',\n    'Papai noel, eu quero te pedir por favor uma boneca polly eu moro na Rua Ipiranga, número 771',\n    'Papai noel eu sou o Julio eu moro na Estrada da Felicidade, número 2827 esse natal eu gostaria de ganhar um celular se eu ganhar vou ficar muito muito feliz',\n    'Oi Papai Noel, eu sou Sam, meu endereço é Rua Jose Dias, n609 esse ano tirei notas muito boas no colegio, acho que eu merecia ganhar uma bicicleta ou bola',\n    'ola papai noel eu moro na Avenida Vinte e Nove de Setembro, número 2379 eu gostaria de ganhar um ponei',\n    'Papai noel eu sou a Thayna moro na Avenida Vinte e Nove de Setembro, 3727 gostaria de pedir para o senhor um patinete']\n\nexport default cartas;","import React, { useState } from 'react';\nimport { Button, TextArea, ToastNotification } from 'carbon-components-react';\nimport cartas from '../../constants/cartas';\n\nconst Carta = (props) => {\n\n    const initialState = {\n        letterText: \"\",\n        error: false,\n        errMsg: \"\"\n    };\n\n    const [state, setState] = useState(initialState);\n\n    const textChangeHandler = (e) => {\n        setState({ letterText: e.target.value });\n    };\n\n    const randomButtonHandler = () => {\n        const carta = cartas[Math.floor(Math.random() * cartas.length)];\n        setState({ letterText: carta });\n    };\n\n    const analyzeButtonHandler = async () => {\n        props.setLoading();\n        const rawResponse = await fetch('/analise', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\n            body: JSON.stringify({\n                carta: state.letterText\n            })\n        });\n        const content = await rawResponse.json();\n        if (content.err === true) {\n            console.error(content);\n            setState({\n                ...state,\n                error: true,\n                errMsg: content.msg\n            });\n            props.cancel();\n        } else {\n            props.setData(content.result);\n            setState({\n                ...state,\n                error: false,\n                errMsg: \"404 - Not Found\"\n            })\n        };\n    };\n\n    let error;\n    if (state.error === true) {\n        error = (\n            <div className=\"loading--hover\">\n                <ToastNotification\n                    kind=\"error\"\n                    title=\"Erro\"\n                    subtitle={state.errMsg.split('\\n').map(line => <>{line}<br /></>)}\n                    iconDescription=\"Fechar\"\n                    onCloseButtonClick={() => setState({ ...state, error: false, errMsg: \"\" })}\n                    caption={Date()}\n                />\n            </div>\n        );\n    } else {\n        error = null;\n    }\n\n    return (\n        <div className=\"bx--grid\">\n            {error}\n            <div className=\"bx--row\" style={{ justifyContent: \"flex-start\", marginBottom: \"8px\" }}>\n                <Button\n                    kind=\"secondary\"\n                    style={{ marginRight: \"8px\" }}\n                    onClick={randomButtonHandler}>\n                    Carta Aleatória\n                </Button>\n                <Button\n                    onClick={analyzeButtonHandler}>\n                    Analisar\n                </Button>\n            </div>\n            <div className=\"bx--row\">\n                <TextArea\n                    value={state.letterText}\n                    cols={100}\n                    labelText=\"Carta\"\n                    rows={8}\n                    onChange={(e) => textChangeHandler(e)}\n                    placeholder=\"Escreva uma carta para o Papai Noel...\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Carta;","import React from 'react';\nimport classes from './Analise.module.css';\n\nconst Analise = (props) => {\n\n    let content = null;\n    if (props.data === null) {\n        content = (\n            <div className=\"bx--row\">\n                <p className={classes.placeholder}>Clique no botão \"Analisar\" para ver como seu modelo está se saindo!</p>\n            </div>\n        )\n    } else {\n        // console.log(props.data);\n        content = (\n            <>\n                <div className=\"bx--row\">\n                    <p className={classes.data}>\n                        {props.data.entities.map((entity, index) => {\n                            let prefix = <><span className={classes.subtitle}>Entidades</span><br /></>;\n                            if (index !== 0) {\n                                prefix = <br />;\n                            }\n                            return (<>\n                                {prefix}\n                                <strong>Tipo</strong>: \"{entity.type}\", <strong>Nome</strong>: \"{entity.text}\", <strong>Confiança</strong>: {entity.confidence}\n                            </>)\n                        })}\n                    </p>\n                </div>\n                <hr style={{ margin: \"16px 0\" }} />\n                <div className=\"bx--row\" style={{ marginTop: \"8px\" }}>\n                    <p className={classes.data}>\n                        {props.data.relations.map((relation, index) => {\n                            let prefix = <><span className={classes.subtitle}>Relações</span><br /></>;\n                            if (index !== 0) {\n                                prefix = <br />;\n                            };\n                            return (<>\n                                {prefix}\n                                <strong>Tipo</strong>: \"{relation.type}\"<br /><strong>Entidades envolvidas</strong>: {relation.arguments.map((argument, index) => {\n                                    if (index !== relation.arguments.length - 1) {\n                                        return '\"' + argument.text + '\", ';\n                                    } else {\n                                        return '\"' + argument.text + '\"';\n                                    };\n                                })}\n                                <br />\n                                <strong>Confiança</strong>: {relation.score}\n                                <br />\n                            </>);\n                        })}\n                    </p>\n                </div>\n            </>\n        );\n    }\n\n    return (\n        <div className=\"bx--grid\" style={{ marginTop: \"16px\" }}>\n            <label className=\"bx--label\">\n                Análise\n            </label>\n            {content}\n        </div>\n    );\n};\n\nexport default Analise;","import React, { useState } from 'react';\nimport './App.css';\nimport { Content } from 'carbon-components-react/lib/components/UIShell';\nimport { ToastNotification } from 'carbon-components-react';\nimport Header from './components/AppHeader/AppHeader';\nimport Carta from './components/Carta/Carta';\nimport Analise from './components/Analise/Analise';\nimport io from 'socket.io-client';\n\nconst App = (props) => {\n\n  const initialState = {\n    data: null,\n    loading: false,\n    points: null\n  };\n\n  const [state, setState] = useState(initialState);\n\n  const socket = io();\n  socket.on('pontuacaoRecebida', obj => {\n    // console.log('pontuação recebida:', obj);\n    setState({\n      ...state,\n      // data: { ...state.data },\n      points: obj.msg,\n      loading: false\n    });\n  });\n\n  const setDataHandler = (data) => {\n    setState({\n      ...state,\n      data: {\n        entities: data.entities,\n        relations: data.relations\n      },\n      loading: false\n    });\n  };\n\n  const setLoadingHandler = () => {\n    setState({\n      ...state,\n      data: null,\n      loading: true\n    });\n  };\n\n  const cancelLoadingHandler = () => {\n    setState({\n      ...state,\n      loading: false\n    });\n  };\n\n  let loadingComponent = null;\n  if (state.loading === true) {\n    loadingComponent = (\n      <div className=\"loading--hover\">\n        <div data-loading className=\"bx--loading\">\n          <svg className=\"bx--loading__svg\" viewBox=\"-75 -75 150 150\">\n            <title>Loading</title>\n            <circle className=\"bx--loading__stroke\" cx=\"0\" cy=\"0\" r=\"37.5\" />\n          </svg>\n        </div>\n      </div>\n    );\n  } else {\n    loadingComponent = null;\n  };\n\n  let points;\n  if (state.points !== null) {\n    points = (\n      <div className=\"modal-settings\">\n        <ToastNotification\n          kind=\"success\"\n          title=\"Desafio concluído!\"\n          subtitle={state.points}\n          iconDescription=\"Fechar\"\n          onCloseButtonClick={() => setState({ ...state, points: null, loading: false })}\n          caption={Date()}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Header setLoading={setLoadingHandler} cancel={cancelLoadingHandler} />\n      <Content style={{ marginRight: \"16rem\" }}>\n        {points}\n        <div className=\"bx--grid\">\n          {loadingComponent}\n          <div className=\"bx--row\" style={{ marginBottom: \"32px\" }}>\n            <Carta setData={(d) => setDataHandler(d)} setLoading={setLoadingHandler} cancel={cancelLoadingHandler} />\n          </div>\n          <div className=\"bx--row\">\n            <Analise data={state.data} />\n          </div>\n        </div>\n      </Content>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RightPanel_container__3cbVn\"};"],"sourceRoot":""}